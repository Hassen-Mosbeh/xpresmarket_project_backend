generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  category_id    Int       @id @default(autoincrement())
  category_name  String    @unique @db.VarChar(255)
  descp_category String?   @db.Text
  product        product[]
}

model product {
  product_id   Int       @id @default(autoincrement())
  product_name String    @db.VarChar(255)
  description  String?   @db.Text
  price        Decimal   @db.Decimal(10, 2)
  stock        Int       @default(0)
  status       Boolean?  @default(true)
  image        String?   @db.VarChar(255)
  category_id  Int?
  category     category? @relation(fields: [category_id], references: [category_id], onUpdate: NoAction, map: "product_ibfk_1")

  @@index([category_id], map: "category_id")
  orders       order[] 
}
model Contact {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255) // rendre l'email unique
  phone_number String   @db.VarChar(20)
  subject      String   @db.VarChar(255)
  content      String   @db.Text
}
enum Status {
  active
  inactive
  deleted
}



model User {
  id                 Int        @id @default(autoincrement())
  username           String?    @db.VarChar(191)
  email              String     @unique
  company_email      String?    @db.VarChar(255)
  profile            String     @default("Buyer")
  password           String
  telephone          String     @db.VarChar(191)
  company_name       String?    @db.VarChar(191)
  company_adresse    String?    @db.VarChar(191)
  company_tel        String?    @db.VarChar(191)
  createdAt          DateTime   @default(now())
  resetCode          String? 
  resetCodeExpiresAt DateTime?
  status             Status     @default(active)
  orders             order[]

}
model order {
  order_id           Int        @id @default(autoincrement())
  user_id            Int
  product_id         Int
  payement_method    String       @db.VarChar(50)
  date               DateTime     @default(now())
  status             orderStatus  @default(Pending)
  total_amount       Decimal      @db.Decimal(10,2)
  // relations 
  user               User         @relation (fields: [user_id],references : [id])
  product            product      @relation (fields: [product_id], references :[product_id])
  @@map ("orders")
}
enum orderStatus{
  Pending 
  Delivered 
}

